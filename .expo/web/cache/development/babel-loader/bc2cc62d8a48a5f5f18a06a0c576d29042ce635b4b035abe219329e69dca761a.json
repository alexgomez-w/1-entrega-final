{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport * as Location from \"expo-location\";\nimport AddButton from \"../Components/AddButton\";\nimport { usePostUserLocationMutation } from \"../Services/shopServices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserLocation } from \"../Features/User/userSlice\";\nimport { colors } from \"../Global/Colors\";\nimport MapPreview from \"../Components/MapPreview\";\nimport { google_maps_api_key } from \"../Database/firebaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar LocationSelector = function LocationSelector(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      latitude: \"\",\n      longitude: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    address = _useState6[0],\n    setAddress = _useState6[1];\n  var _usePostUserLocationM = usePostUserLocationMutation(),\n    _usePostUserLocationM2 = _slicedToArray(_usePostUserLocationM, 2),\n    triggerPostUserLocation = _usePostUserLocationM2[0],\n    resultPostUserLocation = _usePostUserLocationM2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.userReducer.value;\n    }),\n    localId = _useSelector.localId;\n  var dispatch = useDispatch();\n  console.log(location);\n  var onConfirmAddress = function onConfirmAddress() {\n    var locationFormatted = {\n      latitude: location.latitude,\n      longitude: location.longitude,\n      address: address\n    };\n    dispatch(setUserLocation(locationFormatted));\n    triggerPostUserLocation({\n      location: locationFormatted,\n      localId: localId\n    });\n    navigation.goBack();\n  };\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      try {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status !== \"granted\") {\n          setError(\"Permission to access location was denied\");\n          return;\n        }\n        var _location = yield Location.getCurrentPositionAsync({});\n        setLocation({\n          latitude: _location.coords.latitude,\n          longitude: _location.coords.longitude\n        });\n      } catch (error) {\n        console.log(error.message);\n        setError(error.message);\n      }\n    })();\n  }, []);\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      try {\n        if (location.latitude) {\n          var url_reverse_geocode = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + location.latitude + \",\" + location.longitude + \"&key=\" + google_maps_api_key;\n          var response = yield fetch(url_reverse_geocode);\n          var data = yield response.json();\n          console.dir(data);\n          setAddress(data.results[0].formatted_address);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, [location]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"My Address\"\n    }), location ? _jsxs(_Fragment, {\n      children: [_jsxs(Text, {\n        style: styles.text,\n        children: [\"Lat: \", location.latitude, \", long: \", location.longitude, \".\"]\n      }), _jsx(MapPreview, {\n        location: location\n      }), _jsxs(Text, {\n        style: styles.address,\n        children: [\"Formatted address: \", address]\n      }), _jsx(AddButton, {\n        onPress: onConfirmAddress,\n        title: \"Confirm address\"\n      })]\n    }) : _jsx(_Fragment, {\n      children: _jsx(View, {\n        style: styles.noLocationContainer,\n        children: _jsx(Text, {\n          children: error\n        })\n      })\n    })]\n  });\n};\nexport default LocationSelector;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  text: {\n    paddingTop: 20,\n    fontFamily: 'Josefin',\n    fontSize: 18\n  },\n  noLocationContainer: {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: colors.peach,\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  address: {\n    padding: 10,\n    fontFamily: \"Ubuntu\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Location","AddButton","usePostUserLocationMutation","useDispatch","useSelector","setUserLocation","colors","MapPreview","google_maps_api_key","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LocationSelector","_ref","navigation","_useState","latitude","longitude","_useState2","_slicedToArray","location","setLocation","_useState3","_useState4","error","setError","_useState5","_useState6","address","setAddress","_usePostUserLocationM","_usePostUserLocationM2","triggerPostUserLocation","resultPostUserLocation","_useSelector","state","userReducer","value","localId","dispatch","console","log","onConfirmAddress","locationFormatted","goBack","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","coords","message","url_reverse_geocode","response","fetch","data","json","dir","results","formatted_address","View","style","styles","container","children","Text","text","onPress","title","noLocationContainer","StyleSheet","create","flex","alignItems","justifyContent","paddingTop","fontFamily","fontSize","width","height","borderWidth","borderColor","peach","padding"],"sources":["C:/Users/alexander.gomez/projects/clonados/CODERHOUSE/1-entrega-final/src/Screens/LocationSelector.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport * as Location from \"expo-location\";\nimport AddButton from \"../Components/AddButton\";\nimport { usePostUserLocationMutation } from \"../Services/shopServices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserLocation } from \"../Features/User/userSlice\";\nimport { colors } from \"../Global/Colors\";\nimport MapPreview from \"../Components/MapPreview\";\nimport { google_maps_api_key } from \"../Database/firebaseConfig\";\n\nconst LocationSelector = ({ navigation }) => {\n\n    const [location, setLocation] = useState({ latitude: \"\", longitude: \"\" });\n    const [error, setError] = useState(\"\");\n\n    const [address, setAddress] = useState(\"\");\n\n    const [triggerPostUserLocation, resultPostUserLocation] = usePostUserLocationMutation()\n    const {localId} = useSelector(state => state.userReducer.value)\n    const dispatch = useDispatch()\n\n    /* const {localId} = useSelector(state => state.userReducer.value)\n    const [triggerPostAddress, result] = usePostUserLocationMutation();\n    const dispatch = useDispatch(); */\n\n    console.log(location);\n\n    const onConfirmAddress = () => {\n\n        const locationFormatted = {\n            latitude: location.latitude,\n            longitude: location.longitude,\n            address\n        }\n\n        dispatch(setUserLocation(\n            locationFormatted\n        ))\n\n        triggerPostUserLocation({\n            location: locationFormatted,\n            localId\n        })\n\n        navigation.goBack()\n        /* const locationFormatted = {\n            latitude: location.latitude,\n            longitude: location.longitude,\n            address: address\n        }\n        dispatch(setUserLocation(locationFormatted))\n        \n        triggerPostAddress({location: locationFormatted, localId}) */\n    }\n    \n    //Location requested on mount\n    useEffect(() => {\n        (async () => {\n            try {\n                let { status } = await Location.requestForegroundPermissionsAsync();\n                if (status !== \"granted\") {\n                    setError(\"Permission to access location was denied\");\n                    return;\n                }\n    \n                let location = await Location.getCurrentPositionAsync({});\n                setLocation({\n                    latitude: location.coords.latitude,\n                    longitude: location.coords.longitude,\n                });\n                \n            } catch (error) {\n                console.log(error.message);\n                setError(error.message)\n            }\n        })()\n    }, [])\n\n    //Reverse geocoding\n    useEffect(() => {\n        (async () => {\n            try {\n                if (location.latitude) {\n                    const url_reverse_geocode = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${location.latitude},${location.longitude}&key=${google_maps_api_key}`;\n                    const response = await fetch(url_reverse_geocode);\n                    const data = await response.json();\n                    console.dir(data);\n                    setAddress(data.results[0].formatted_address);\n                }\n            } catch (error) {\n                setError(error.message);\n            }\n        })();\n    }, [location]);\n\n    return (\n        <View style={styles.container}>\n            <Text\n                style = {styles.text}\n            >My Address</Text>\n            {/* Flatlist con las directions */}\n            {location ? (\n                <>\n                    <Text \n                        style = {styles.text}\n                    >Lat: {location.latitude}, long: {location.longitude}.\n                    </Text>\n                    <MapPreview location={location} />\n                    <Text style={styles.address}>\n                        Formatted address: {address}\n                    </Text>\n                    <AddButton\n                        onPress={onConfirmAddress}\n                        title=\"Confirm address\"\n                    />\n                </>\n            ) : (\n                <>\n                    <View style={styles.noLocationContainer}>\n                        <Text>{error}</Text>\n                    </View>\n                </>\n            )}\n        </View>\n    );\n};\n\nexport default LocationSelector;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    text: {\n        paddingTop: 20,\n        fontFamily: 'Josefin',\n        fontSize: 18\n    },\n    noLocationContainer: {\n        width: 200,\n        height: 200,\n        borderWidth: 2,\n        borderColor: colors.peach,\n        padding: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    address: {\n        padding: 10,\n        fontFamily: \"Ubuntu\",\n        fontSize: 16,\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}