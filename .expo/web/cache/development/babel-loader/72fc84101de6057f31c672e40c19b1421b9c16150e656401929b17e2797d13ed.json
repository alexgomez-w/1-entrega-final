{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AddButton from \"../Components/AddButton\";\nimport AddressItem from \"../Components/AddressItem\";\nimport { useGetUserLocationQuery } from \"../Services/shopServices\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListAddress = function ListAddress(_ref) {\n  var navigation = _ref.navigation;\n  var _useSelector = useSelector(function (state) {\n      return state.userReducer.value;\n    }),\n    location = _useSelector.location,\n    localId = _useSelector.localId;\n  var _useGetUserLocationQu = useGetUserLocationQuery(localId),\n    userLocationQuery = _useGetUserLocationQu.data,\n    isError = _useGetUserLocationQu.isError,\n    isLoading = _useGetUserLocationQu.isLoading;\n  return location != null && location.latitude || userLocationQuery ? _jsx(AddressItem, {\n    location: location.latitude ? location : userLocationQuery,\n    navigation: navigation\n  }) : _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"No location set\"\n    }), _jsx(AddButton, {\n      title: \"Set location\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Location Selector\");\n      }\n    })]\n  });\n};\nexport default ListAddress;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  text: {\n    paddingVertical: 20,\n    fontFamily: 'Josefin',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useSelector","AddButton","AddressItem","useGetUserLocationQuery","jsx","_jsx","jsxs","_jsxs","ListAddress","_ref","navigation","_useSelector","state","userReducer","value","location","localId","_useGetUserLocationQu","userLocationQuery","data","isError","isLoading","latitude","View","style","styles","container","children","Text","text","title","onPress","navigate","StyleSheet","create","justifyContent","alignItems","paddingVertical","fontFamily","fontSize"],"sources":["C:/Users/alexander.gomez/projects/clonados/CODERHOUSE/1-entrega-final/src/Screens/ListAddress.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AddButton from \"../Components/AddButton\";\nimport AddressItem from '../Components/AddressItem'\nimport { useGetUserLocationQuery } from \"../Services/shopServices\";\n\nconst ListAddress = ({ navigation }) => {\n    const { location, localId } = useSelector((state) => state.userReducer.value);\n    const {data: userLocationQuery, isError, isLoading} = useGetUserLocationQuery(localId)\n\n/*     console.log(userLocationQuery);\n\n    let locationQueryFormatted = {\n        location: userLocationQuery\n    } */\n\n    return location?.latitude || userLocationQuery ? (\n        <AddressItem \n            location={location.latitude ? location : userLocationQuery} \n            navigation={navigation} \n        />\n    ) : (\n        <View style = {styles.container}>\n            <Text style={styles.text}>No location set</Text>\n            <AddButton\n                title=\"Set location\"\n                onPress={() => navigation.navigate(\"Location Selector\")}\n            />\n        </View>\n    );\n};\n\nexport default ListAddress;\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    },\n    text: {\n        paddingVertical: 20,\n        fontFamily: 'Josefin',\n        fontSize: 18\n    }\n});\n"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,SAASC,uBAAuB;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnE,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC7B,IAAAC,YAAA,GAA8BX,WAAW,CAAC,UAACY,KAAK;MAAA,OAAKA,KAAK,CAACC,WAAW,CAACC,KAAK;IAAA,EAAC;IAArEC,QAAQ,GAAAJ,YAAA,CAARI,QAAQ;IAAEC,OAAO,GAAAL,YAAA,CAAPK,OAAO;EACzB,IAAAC,qBAAA,GAAsDd,uBAAuB,CAACa,OAAO,CAAC;IAAzEE,iBAAiB,GAAAD,qBAAA,CAAvBE,IAAI;IAAqBC,OAAO,GAAAH,qBAAA,CAAPG,OAAO;IAAEC,SAAS,GAAAJ,qBAAA,CAATI,SAAS;EAQlD,OAAON,QAAQ,YAARA,QAAQ,CAAEO,QAAQ,IAAIJ,iBAAiB,GAC1Cb,IAAA,CAACH,WAAW;IACRa,QAAQ,EAAEA,QAAQ,CAACO,QAAQ,GAAGP,QAAQ,GAAGG,iBAAkB;IAC3DR,UAAU,EAAEA;EAAW,CAC1B,CAAC,GAEFH,KAAA,CAACgB,IAAI;IAACC,KAAK,EAAIC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BtB,IAAA,CAACuB,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,IAAK;MAAAF,QAAA,EAAC;IAAe,CAAM,CAAC,EAChDtB,IAAA,CAACJ,SAAS;MACN6B,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,mBAAmB,CAAC;MAAA;IAAC,CAC3D,CAAC;EAAA,CACA,CACT;AACL,CAAC;AAED,eAAexB,WAAW;AAE1B,IAAMiB,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE;EAChB,CAAC;EACDP,IAAI,EAAE;IACFQ,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}